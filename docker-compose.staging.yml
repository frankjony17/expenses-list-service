version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: 811368550600.dkr.ecr.us-east-1.amazonaws.com/expenses-list-ec2:api
    command: >
      sh -c "python manage.py migrate && 
             python manage.py collectstatic --no-input --clear && 
             gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/usr/src/apps/api/staticfiles
      - media_volume:/usr/src/apps/api/mediafiles
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    image: 811368550600.dkr.ecr.us-east-1.amazonaws.com/expenses-list-ec2:nginx-proxy
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - static_volume:/usr/src/apps/api/staticfiles
      - media_volume:/usr/src/apps/api/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - api

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme: